// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RunGroupWebApp.Data;

#nullable disable

namespace RunGroupWebApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240707164234_initCreate")]
    partial class initCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("RunGroupWebApp.Models.Adress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .HasColumnType("text");

                    b.Property<string>("Street")
                        .HasColumnType("text");

                    b.Property<string>("state")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Adresses");
                });

            modelBuilder.Entity("RunGroupWebApp.Models.AppUser", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("text");

                    b.Property<int?>("Millage")
                        .HasColumnType("integer");

                    b.Property<int?>("adressId")
                        .HasColumnType("integer");

                    b.Property<int?>("pace")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("adressId");

                    b.ToTable("AppUser");
                });

            modelBuilder.Entity("RunGroupWebApp.Models.Club", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int>("AdressId")
                        .HasColumnType("integer");

                    b.Property<string>("AppuserID")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.Property<int>("clubcategory")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("AdressId");

                    b.HasIndex("AppuserID");

                    b.ToTable("Clubs");
                });

            modelBuilder.Entity("RunGroupWebApp.Models.Race", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int>("AdressId")
                        .HasColumnType("integer");

                    b.Property<string>("AppuserID")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.Property<int>("clubcategory")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("AdressId");

                    b.HasIndex("AppuserID");

                    b.ToTable("Races");
                });

            modelBuilder.Entity("RunGroupWebApp.Models.AppUser", b =>
                {
                    b.HasOne("RunGroupWebApp.Models.Adress", "adress")
                        .WithMany()
                        .HasForeignKey("adressId");

                    b.Navigation("adress");
                });

            modelBuilder.Entity("RunGroupWebApp.Models.Club", b =>
                {
                    b.HasOne("RunGroupWebApp.Models.Adress", "adress")
                        .WithMany()
                        .HasForeignKey("AdressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RunGroupWebApp.Models.AppUser", "appuser")
                        .WithMany("clubs")
                        .HasForeignKey("AppuserID");

                    b.Navigation("adress");

                    b.Navigation("appuser");
                });

            modelBuilder.Entity("RunGroupWebApp.Models.Race", b =>
                {
                    b.HasOne("RunGroupWebApp.Models.Adress", "adress")
                        .WithMany()
                        .HasForeignKey("AdressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RunGroupWebApp.Models.AppUser", "appuser")
                        .WithMany("races")
                        .HasForeignKey("AppuserID");

                    b.Navigation("adress");

                    b.Navigation("appuser");
                });

            modelBuilder.Entity("RunGroupWebApp.Models.AppUser", b =>
                {
                    b.Navigation("clubs");

                    b.Navigation("races");
                });
#pragma warning restore 612, 618
        }
    }
}
